#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ресторан
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ресторан")]
	public partial class АвторизацияDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertСотрудники(Сотрудники instance);
    partial void UpdateСотрудники(Сотрудники instance);
    partial void DeleteСотрудники(Сотрудники instance);
    partial void InsertЗаказ(Заказ instance);
    partial void UpdateЗаказ(Заказ instance);
    partial void DeleteЗаказ(Заказ instance);
    partial void InsertКлиент(Клиент instance);
    partial void UpdateКлиент(Клиент instance);
    partial void DeleteКлиент(Клиент instance);
    partial void InsertМеста(Места instance);
    partial void UpdateМеста(Места instance);
    partial void DeleteМеста(Места instance);
    partial void InsertБлюда(Блюда instance);
    partial void UpdateБлюда(Блюда instance);
    partial void DeleteБлюда(Блюда instance);
    #endregion
		
		public АвторизацияDataContext() : 
				base(global::Ресторан.Properties.Settings.Default.РесторанConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public АвторизацияDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public АвторизацияDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public АвторизацияDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public АвторизацияDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Сотрудники> Сотрудники
		{
			get
			{
				return this.GetTable<Сотрудники>();
			}
		}
		
		public System.Data.Linq.Table<Заказ> Заказ
		{
			get
			{
				return this.GetTable<Заказ>();
			}
		}
		
		public System.Data.Linq.Table<Клиент> Клиент
		{
			get
			{
				return this.GetTable<Клиент>();
			}
		}
		
		public System.Data.Linq.Table<Места> Места
		{
			get
			{
				return this.GetTable<Места>();
			}
		}
		
		public System.Data.Linq.Table<Блюда> Блюда
		{
			get
			{
				return this.GetTable<Блюда>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Сотрудники")]
	public partial class Сотрудники : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ФИО;
		
		private string _Логин;
		
		private string _Пароль;
		
		private int _ID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnФИОChanging(string value);
    partial void OnФИОChanged();
    partial void OnЛогинChanging(string value);
    partial void OnЛогинChanged();
    partial void OnПарольChanging(string value);
    partial void OnПарольChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Сотрудники()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО", DbType="NVarChar(50)")]
		public string ФИО
		{
			get
			{
				return this._ФИО;
			}
			set
			{
				if ((this._ФИО != value))
				{
					this.OnФИОChanging(value);
					this.SendPropertyChanging();
					this._ФИО = value;
					this.SendPropertyChanged("ФИО");
					this.OnФИОChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Логин", DbType="NVarChar(50)")]
		public string Логин
		{
			get
			{
				return this._Логин;
			}
			set
			{
				if ((this._Логин != value))
				{
					this.OnЛогинChanging(value);
					this.SendPropertyChanging();
					this._Логин = value;
					this.SendPropertyChanged("Логин");
					this.OnЛогинChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Пароль", DbType="NVarChar(50)")]
		public string Пароль
		{
			get
			{
				return this._Пароль;
			}
			set
			{
				if ((this._Пароль != value))
				{
					this.OnПарольChanging(value);
					this.SendPropertyChanging();
					this._Пароль = value;
					this.SendPropertyChanged("Пароль");
					this.OnПарольChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Заказ")]
	public partial class Заказ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ФИО;
		
		private System.Nullable<int> _Место;
		
		private System.Nullable<int> _Блюда;
		
		private System.Nullable<int> _Сумма;
		
		private int _ID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnФИОChanging(string value);
    partial void OnФИОChanged();
    partial void OnМестоChanging(System.Nullable<int> value);
    partial void OnМестоChanged();
    partial void OnБлюдаChanging(System.Nullable<int> value);
    partial void OnБлюдаChanged();
    partial void OnСуммаChanging(System.Nullable<int> value);
    partial void OnСуммаChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Заказ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО", DbType="NVarChar(50)")]
		public string ФИО
		{
			get
			{
				return this._ФИО;
			}
			set
			{
				if ((this._ФИО != value))
				{
					this.OnФИОChanging(value);
					this.SendPropertyChanging();
					this._ФИО = value;
					this.SendPropertyChanged("ФИО");
					this.OnФИОChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Место", DbType="Int")]
		public System.Nullable<int> Место
		{
			get
			{
				return this._Место;
			}
			set
			{
				if ((this._Место != value))
				{
					this.OnМестоChanging(value);
					this.SendPropertyChanging();
					this._Место = value;
					this.SendPropertyChanged("Место");
					this.OnМестоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Блюда", DbType="Int")]
		public System.Nullable<int> Блюда
		{
			get
			{
				return this._Блюда;
			}
			set
			{
				if ((this._Блюда != value))
				{
					this.OnБлюдаChanging(value);
					this.SendPropertyChanging();
					this._Блюда = value;
					this.SendPropertyChanged("Блюда");
					this.OnБлюдаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Сумма", DbType="Int")]
		public System.Nullable<int> Сумма
		{
			get
			{
				return this._Сумма;
			}
			set
			{
				if ((this._Сумма != value))
				{
					this.OnСуммаChanging(value);
					this.SendPropertyChanging();
					this._Сумма = value;
					this.SendPropertyChanged("Сумма");
					this.OnСуммаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Клиент")]
	public partial class Клиент : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ФИО;
		
		private System.Nullable<int> _Номер_телефона;
		
		private System.Nullable<int> _Посещений;
		
		private System.Nullable<int> _Скидка;
		
		private int _ID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnФИОChanging(string value);
    partial void OnФИОChanged();
    partial void OnНомер_телефонаChanging(System.Nullable<int> value);
    partial void OnНомер_телефонаChanged();
    partial void OnПосещенийChanging(System.Nullable<int> value);
    partial void OnПосещенийChanged();
    partial void OnСкидкаChanging(System.Nullable<int> value);
    partial void OnСкидкаChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Клиент()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО", DbType="NVarChar(50)")]
		public string ФИО
		{
			get
			{
				return this._ФИО;
			}
			set
			{
				if ((this._ФИО != value))
				{
					this.OnФИОChanging(value);
					this.SendPropertyChanging();
					this._ФИО = value;
					this.SendPropertyChanged("ФИО");
					this.OnФИОChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер телефона]", Storage="_Номер_телефона", DbType="Int")]
		public System.Nullable<int> Номер_телефона
		{
			get
			{
				return this._Номер_телефона;
			}
			set
			{
				if ((this._Номер_телефона != value))
				{
					this.OnНомер_телефонаChanging(value);
					this.SendPropertyChanging();
					this._Номер_телефона = value;
					this.SendPropertyChanged("Номер_телефона");
					this.OnНомер_телефонаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Посещений", DbType="Int")]
		public System.Nullable<int> Посещений
		{
			get
			{
				return this._Посещений;
			}
			set
			{
				if ((this._Посещений != value))
				{
					this.OnПосещенийChanging(value);
					this.SendPropertyChanging();
					this._Посещений = value;
					this.SendPropertyChanged("Посещений");
					this.OnПосещенийChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Скидка", DbType="Int")]
		public System.Nullable<int> Скидка
		{
			get
			{
				return this._Скидка;
			}
			set
			{
				if ((this._Скидка != value))
				{
					this.OnСкидкаChanging(value);
					this.SendPropertyChanging();
					this._Скидка = value;
					this.SendPropertyChanged("Скидка");
					this.OnСкидкаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Места")]
	public partial class Места : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Номер_места;
		
		private System.Data.Linq.Binary _Состояние;
		
		private int _ID;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНомер_местаChanging(string value);
    partial void OnНомер_местаChanged();
    partial void OnСостояниеChanging(System.Data.Linq.Binary value);
    partial void OnСостояниеChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Места()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер места]", Storage="_Номер_места", DbType="NVarChar(50)")]
		public string Номер_места
		{
			get
			{
				return this._Номер_места;
			}
			set
			{
				if ((this._Номер_места != value))
				{
					this.OnНомер_местаChanging(value);
					this.SendPropertyChanging();
					this._Номер_места = value;
					this.SendPropertyChanged("Номер_места");
					this.OnНомер_местаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Состояние", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Состояние
		{
			get
			{
				return this._Состояние;
			}
			set
			{
				if ((this._Состояние != value))
				{
					this.OnСостояниеChanging(value);
					this.SendPropertyChanging();
					this._Состояние = value;
					this.SendPropertyChanged("Состояние");
					this.OnСостояниеChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Блюда")]
	public partial class Блюда : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Название_блюда;
		
		private string _Масса_ингридиентов_граммы_;
		
		private System.Nullable<int> _Сумма_Руб_BY_;
		
		private int _ID;
		
		private string _Категория;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnНазвание_блюдаChanging(string value);
    partial void OnНазвание_блюдаChanged();
    partial void OnМасса_ингридиентов_граммы_Changing(string value);
    partial void OnМасса_ингридиентов_граммы_Changed();
    partial void OnСумма_Руб_BY_Changing(System.Nullable<int> value);
    partial void OnСумма_Руб_BY_Changed();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnКатегорияChanging(string value);
    partial void OnКатегорияChanged();
    #endregion
		
		public Блюда()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Название блюда]", Storage="_Название_блюда", DbType="NVarChar(50)")]
		public string Название_блюда
		{
			get
			{
				return this._Название_блюда;
			}
			set
			{
				if ((this._Название_блюда != value))
				{
					this.OnНазвание_блюдаChanging(value);
					this.SendPropertyChanging();
					this._Название_блюда = value;
					this.SendPropertyChanged("Название_блюда");
					this.OnНазвание_блюдаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Масса ингридиентов(граммы)]", Storage="_Масса_ингридиентов_граммы_", DbType="NVarChar(50)")]
		public string Масса_ингридиентов_граммы_
		{
			get
			{
				return this._Масса_ингридиентов_граммы_;
			}
			set
			{
				if ((this._Масса_ингридиентов_граммы_ != value))
				{
					this.OnМасса_ингридиентов_граммы_Changing(value);
					this.SendPropertyChanging();
					this._Масса_ингридиентов_граммы_ = value;
					this.SendPropertyChanged("Масса_ингридиентов_граммы_");
					this.OnМасса_ингридиентов_граммы_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Сумма(Руб BY)]", Storage="_Сумма_Руб_BY_", DbType="Int")]
		public System.Nullable<int> Сумма_Руб_BY_
		{
			get
			{
				return this._Сумма_Руб_BY_;
			}
			set
			{
				if ((this._Сумма_Руб_BY_ != value))
				{
					this.OnСумма_Руб_BY_Changing(value);
					this.SendPropertyChanging();
					this._Сумма_Руб_BY_ = value;
					this.SendPropertyChanged("Сумма_Руб_BY_");
					this.OnСумма_Руб_BY_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Категория", DbType="NVarChar(50)")]
		public string Категория
		{
			get
			{
				return this._Категория;
			}
			set
			{
				if ((this._Категория != value))
				{
					this.OnКатегорияChanging(value);
					this.SendPropertyChanging();
					this._Категория = value;
					this.SendPropertyChanged("Категория");
					this.OnКатегорияChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
